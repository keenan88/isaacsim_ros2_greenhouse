
services:

  # isaac-sim:
  #   build:
  #     context: ./dockerfiles/
  #     dockerfile: isaacsim_humble_dockerfile
  #   image: isaacsim_humble

  #   container_name: humble-isaac-sim
  #   stdin_open: true
  #   tty: true
  #   environment:
  #     - ACCEPT_EULA=Y
  #     - PRIVACY_CONSENT=Y
  #     - USE_SIM=${USE_SIM}
  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #           - capabilities:
  #               - gpu
  #   volumes:
  #     - ./fastdds.xml:/root/.ros/fastdds.xml:rw
  #     # - ~/docker/isaac-sim/cache/kit:/isaac-sim/kit/cache:rw
  #     - ~/docker/isaac-sim/cache/ov:/root/.cache/ov:rw
  #     # - ~/docker/isaac-sim/cache/pip:/root/.cache/pip:rw
  #     # - ~/docker/isaac-sim/cache/glcache:/root/.cache/nvidia/GLCache:rw
  #     # - ~/docker/isaac-sim/cache/computecache:/root/.nv/ComputeCache:rw
  #     # - ~/docker/isaac-sim/logs:/root/.nvidia-omniverse/logs:rw
  #     # - ~/docker/isaac-sim/data:/root/.local/share/ov/data:rw
  #     # - ~/docker/isaac-sim/documents:/root/Documents:rw
  #     - ./humble_ws:/isaac-sim/humble_ws:rw
  #     - ./docker_entry_scripts/isaacsim_entrypoint.sh:/isaac-sim/scripts/isaacsim_entrypoint.sh:rw
  #   network_mode: "host"
  #   restart: "no"
  #   entrypoint: /isaac-sim/scripts/isaacsim_entrypoint.sh

  # humble-desktop-navigation:
  #   container_name: humble-desktop-navigation
  #   build:
  #     context: ./dockerfiles/
  #     dockerfile: navigation_dockerfile
  #   image: humble_dev_img
  #   tty: true
  #   stdin_open: true
  #   environment:
  #     - DISPLAY=${DISPLAY}
  #     - USE_SIM=${USE_SIM}
  #   volumes:
  #     - /tmp/.X11-unix:/tmp/.X11-unix
  #     - ./humble_ws:/home/humble_ws:rw
  #     - ./docker_entry_scripts/nav_entrypoint.sh:/isaac-sim/scripts/nav_entrypoint.sh:rw
  #     - ./fastdds.xml:/root/.ros/fastdds.xml:rw
  #   #privileged: true # Couldnt get joystick passed in with 'device' tag, so using privileged mode. TODO - pass joystick in without using privileged mode
  #   #network_mode: "host"
  #   working_dir: /home/humble_ws/src/
  #   restart: "no"
  #   entrypoint: /isaac-sim/scripts/nav_entrypoint.sh

  humble-kortex:
    container_name: humble-kortex
    build:
      context: ./dockerfiles/
      dockerfile: kortex_humble_dockerfile
    image: kinova_humble
    tty: true
    stdin_open: true
    environment:
      - DISPLAY=${DISPLAY}
      - USE_SIM=${USE_SIM}
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - ./kortex_ws:/home/kortex_ws:rw
      - ./humble_kortex_interface_ws:/home/humble_kortex_interface_ws:rw
    network_mode: "host"
    privileged: true
    working_dir: /home/humble_kortex_interface_ws
    restart: "no"
    # networks:
    #   - ros2-network
    # entrypoint: /home/scripts/joint_state_translater_entrypoint.sh

  humble-humble-moveit:
    container_name: humble-humble-moveit
    build:
      context: ./dockerfiles/
      dockerfile: moveit_humble_humble_dockerfile
    image: moveit_humble_humble
    tty: true
    stdin_open: true
    environment:
      - DISPLAY=${DISPLAY}
      - USE_SIM=${USE_SIM}
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - ./humble_ws:/home/humble_ws:rw
      - ./kortex_ws:/home/kortex_ws:rw
    network_mode: "host"
    privileged: true
    working_dir: /home/humble_ws
    restart: "no"
    deploy:
      resources:
        reservations:
          devices:
            - capabilities:
                - gpu
    # networks:
    #   - ros2-network
    # entrypoint: /home/scripts/joint_state_translater_entrypoint.sh

  realsense-humble:
    container_name: humble-realsense
    build:
      context: ./dockerfiles/
      dockerfile: realsense_humble_dockerfile
    image: realsense_humble
    tty: true
    stdin_open: true
    environment:
      - DISPLAY=${DISPLAY}
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - ./humble_ws:/home/humble_ws:rw
    network_mode: "host"
    privileged: true
    working_dir: /home/humble_ws
    restart: "no"
    deploy:
      resources:
        reservations:
          devices:
            - capabilities:
                - gpu

  # networks:
  #   ros2-network:
  #     external: true